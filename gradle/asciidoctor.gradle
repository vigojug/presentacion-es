asciidoctor {
    dependsOn download, copyTheme
    sources {
        include 'index.adoc'
    }

    resources {
        from(sourceDir) {
            include 'images/**'
        }
        from(downloadDir) {
            include 'reveal.js/**'
        }
    }

    backends 'revealjs'

    attributes 'sourcedir': project.sourceSets.main.java.srcDirs[0],
            'endpoint-url': 'http://example.org',
            'source-highlighter': 'highlightjs',
            'imagesdir': './images',
            'toc': 'left',
            'icons': 'font',
            'setanchors': 'true',
            'idprefix': '',
            'idseparator': '-',
            'basedir': projectDir,
            'docinfo1': '',
            'width': 1280,
            'height': 720,
            'project-version': '1.0',
            'revealjs_transition':'linear',
            'revealjs_history':'true',
            'revealjs_slideNumber':'true',
            'revealjs_theme': 'summit',
            'examples': file("${projectDir}/examples")
    options template_dirs: [new File(templateDir, "asciidoctor-reveal.js-${asciidoctorBackendVersion}/templates/slim").absolutePath]

    extensions {
	inlinemacro (name: "screencast") { parent, target, attributes ->
                def pid = "player-container-${UUID.randomUUID()}"
		"""
<div id="$pid"></div>
  <script>
    asciinema_player.core.CreatePlayer('$pid', '${target}.json', { width: 114, height: 24, fontSize: 'medium' });
  </script>
""" 
        }
    }
    
    doLast {
        file("$buildDir/asciidoc/revealjs/index.html").text =
           file("$buildDir/asciidoc/revealjs/index.html").text.replace('</head>', "${file('src/docs/asciidoc/docinfo.html').text}</head>")
    }

}
